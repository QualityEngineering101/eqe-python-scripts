name: CI/CD Pipeline - FastAPI Deployment to Google Cloud

on:
  push:
    branches:
      - fastAPI
    paths:
      - "fastAPI/**"
      - "Dockerfile"

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout FastAPI Folder Only
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            fastAPI
            Dockkerfile
          sparse-checkout-cone-mode: false
      - name: Debug - List Files in Github Actions
        run: ls -l
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image for FastAPI
        working-directory: fastAPI
        run: |
          docker build -t fastapi-app-test -f ./Dockerfile .

      - name: Run Tests Inside Docker Container
        working-directory: fastAPI
        run: |
          docker run --rm fastapi-app-test pytest --junitxml=report.xml

      - name: Tag and Push Docker Image (Only if Tests Pass)
        if: success()
        working-directory: fastAPI
        run: |
          echo "Tagging Docker image..."
          docker tag fastapi-app-test ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

          echo "Pushing Docker image to repository..."
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

      - name: Deploy to Google Cloud VM
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: dean_f_marsh_gmail_com
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            whoami
            hostname
            pwd
            ls -la

            # Find and stop any running container using port 8000
            echo "Checking for running containers on port 8000..."
            RUNNING_CONTAINER=$(docker ps --filter "publish=8000" --format "{{.ID}}")
            if [ ! -z "$RUNNING_CONTAINER" ]; then
              echo "Stopping container $RUNNING_CONTAINER..."
              docker stop $RUNNING_CONTAINER
              docker rm $RUNNING_CONTAINER
            fi

            # Ensure no old containers remain
            echo "Pruning old Docker containers..."
            docker container prune -f

            # Ensure port 8000 is not in use
            echo "Checking for processes using port 8000..."
            if sudo lsof -i :8000; then
              echo "Port 8000 is still in use. Killing the process..."
              sudo kill -9 $(sudo lsof -t -i :8000)
            fi

            # Pull latest Docker image
            echo "Pulling latest Docker image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

            # Run new FastAPI container with correct name
            echo "Starting new FastAPI container..."
            docker run -d -p 8000:8000 --name fastapi-app ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

      - name: Run Post-Deployment API Tests
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: dean_f_marsh_gmail_com
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "Listing files in /app..."
            docker exec fastapi-app ls -R /app/
          
            echo "Checking if tests directory exists inside the container..."
            docker exec fastapi-app ls -la /app/tests || echo "Warning: tests/ directory is missing"

            echo "Running tests inside the deployed container..."
            docker exec fastapi-app pytest /app/tests --disable-warnings